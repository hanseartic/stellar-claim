name: Node.js CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    name: build application
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
        env:
          REACT_APP_DONATION_ADDRESS: ${{ secrets.DONATION_ADDRESS }}
          REACT_APP_VERSION: ${GITHUB_SHA}
          REACT_APP_HORIZON_URL: ${{ secrets.HORIZON_URL }}
      - name: store build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build
          retention-days: 1
      - name: store server
        uses: actions/upload-artifact@v3
        with:
          name: server
          path: index.js
          retention-days: 1

  deploy:
    name: Deploy via rsync
    environment:
      name: asteroids
      url: https://balances.lumens.space
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: retrieve build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: build

      - name: retrieve compiled server
        uses: actions/download-artifact@v3
        with:
          name: server
          path: .

      - name: deploy using rsync
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete --include="build/" --include="build/**" --include="index.js" --exclude="*"
          path: /
          remote_path: ${{ secrets.PATH }}/
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.KEY }}

      - uses: fifsky/ssh-action@master
        name: restart remote service
        with:
          user: ${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          command: |
            cd ${{ secrets.PATH }}; git pull --rebase -f
